resources:
  - name: u16_aarch32_dd_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: "dry-dock/aarch32_u16"
      branch: master

  - name: u16_aarch32_dd_img
    type: image
    integration: shipDH
    versionTemplate:
      sourceName: "drydock/aarch32_u16"
      versionName: master

  - name: u16microbase_aarch32_dd_repo
    type: gitRepo
    integration: avinci_gh
    versionTemplate:
      sourceName: "dry-dock/aarch32_u16microbase"
      branch: master

  - name: u16microbase_aarch32_dd_img
    type: image
    integration: shipDH
    versionTemplate:
      sourceName: "drydock/aarch32_u16microbase"
      versionName: master

jobs:
  - name: u16_aarch32_build
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    runtime:
      nodePool: aarch32_u1604_cus_01
      container: false
    steps:
      - IN: u16_aarch32_dd_repo
      - TASK:
          name: u16_aarch32_build
          runtime:
            options:
              env:
                - REL_VER: "master"
                - RES_IMG: "u16_aarch32_dd_img"
                - RES_REPO: "u16_aarch32_dd_repo"
          script:
            - *build_ship_assets
      - OUT: u16_aarch32_dd_img
    on_success:
      script:
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT"
        - shipctl put_resource_state_multi $IMG_OUT "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT" "BUILD_NUMBER=$BUILD_NUMBER"

  - name: u16_aarch32_tag
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    integrations:
      - ship_ssh
    steps:
      - IN: prod_release
      - IN: u16_aarch32_dd_repo
        switch: off
      - IN: u16_aarch32_dd_img
        switch: off
      - IN: shipit_gh_ssh
        switch: off
      - TASK:
          name: u16_aarch32_tag
          runtime:
            options:
              env:
                - RES_VER: "prod_release"
                - RES_IMG: "u16_aarch32_dd_img"
                - RES_REPO: "u16_aarch32_dd_repo"
          script:
            - *tag_ship_assets
    on_success:
      script:
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$REL_VER" "TAG_COMMIT_SHA=$REPO_COMMIT" "TAG_IMG=$REL_VER"

  - name: u16microbase_aarch32_build
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    runtime:
      nodePool: aarch32_u1604_cus_01
      container: false
    steps:
      - IN: u16microbase_aarch32_dd_repo
      - TASK:
          name: u16microbase_aarch32_build
          runtime:
            options:
              env:
                - REL_VER: "master"
                - RES_IMG: "u16microbase_aarch32_dd_img"
                - RES_REPO: "u16microbase_aarch32_dd_repo"
          script:
            - *build_ship_assets
      - OUT: u16microbase_aarch32_dd_img
    on_success:
      script:
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT"
        - shipctl put_resource_state_multi $IMG_OUT "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT" "BUILD_NUMBER=$BUILD_NUMBER"

  - name: u16microbase_aarch32_tag
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    integrations:
      - ship_ssh
    steps:
      - IN: prod_release
      - IN: u16microbase_aarch32_dd_repo
        switch: off
      - IN: u16microbase_aarch32_dd_img
        switch: off
      - TASK:
          name: u16microbase_aarch32_tag
          runtime:
            options:
              env:
                - RES_VER: "prod_release"
                - RES_IMG: "u16microbase_aarch32_dd_img"
                - RES_REPO: "u16microbase_aarch32_dd_repo"
                - GIT_PATH: "git@github.com:dry-dock/aarch32_u16microbase.git"
          script:
            - *tag_ship_assets
    on_success:
      script:
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$REL_VER" "TAG_COMMIT_SHA=$REPO_COMMIT" "TAG_IMG=$REL_VER"
