resources:
  - name: w2k16_dd_repo
    type: gitRepo
    integration: avinci_gh
    versionTemplate:
      sourceName: "dry-dock/w16"
      branch: master

  - name: w2k16_dd_img
    type: image
    integration: shipDH
    versionTemplate:
      sourceName: "drydock/w16"
      versionName: master

  - name: w2k16dotnetcore_dd_repo
    type: gitRepo
    integration: avinci_gh
    versionTemplate:
      sourceName: "dry-dock/w16dotnetcore"
      branch: master

  - name: w2k16dotnetcore_dd_img
    type: image
    integration: shipDH
    versionTemplate:
      sourceName: "drydock/w16dotnetcore"
      versionName: master

  - name: w2k16aspnetcore_dd_repo
    type: gitRepo
    integration: avinci_gh
    versionTemplate:
      sourceName: "dry-dock/w16aspnetcore"
      branch: master

  - name: w2k16aspnetcore_dd_img
    type: image
    integration: shipDH
    versionTemplate:
      sourceName: "drydock/w16aspnetcore"
      versionName: master

jobs:
  - name: w2k16_x8664_build
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    runtime:
      nodePool: x86_w16_cus_01
      container: false
    steps:
      - IN: w2k16_dd_repo
      - TASK:
          name: w2k16_build
          runtime:
            options:
              env:
                - REL_VER: "master"
                - IMG_OUT: "w2k16_dd_img"
                - RES_REPO: "w2k16_dd_repo"
          script:
            - $script:RES_REPO_COMMIT=$(shipctl get_resource_version_key "$env:RES_REPO" "shaData.commitSha")
            - $script:IMG_NAME=$(shipctl get_resource_version_key "$env:IMG_OUT" "sourceName")
            - $script:DH_USR_NAME=$(shipctl get_integration_resource_field "$env:IMG_OUT" "userName")
            - $script:DH_PASS=$(shipctl get_integration_resource_field "$env:IMG_OUT" "password")
            - pushd $(shipctl get_resource_state "$env:RES_REPO")
            - docker build -t="${IMG_NAME}:${env:REL_VER}" --pull .
            - docker login -u "$DH_USR_NAME" -p "$DH_PASS"
            - docker push "${IMG_NAME}:${env:REL_VER}"
      - OUT: w2k16_dd_img
    on_success:
      script:
        - shipctl put_resource_state_multi "$env:JOB_NAME" "versionName=${env:REL_VER}" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT"
        - shipctl put_resource_state_multi "$env:IMG_OUT" "versionName=${env:REL_VER}" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT" "BUILD_NUMBER=${env:BUILD_NUMBER}"

  - name: w2k16dotnetcore_x8664_build
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    runtime:
      nodePool: x86_w16_cus_01
      container: false
    steps:
      - IN: w2k16dotnetcore_dd_repo
      - IN: w2k16_dd_img
      - TASK:
          name: w2k16dotnetcore_build
          runtime:
            options:
              env:
                - IMG_BASE: "w2k16_dd_img"
                - IMG_OUT: "w2k16dotnetcore_dd_img"
                - RES_REPO: "w2k16dotnetcore_dd_repo"
          script:
            - $script:REL_VER=$(shipctl get_resource_version_key "$env:IMG_BASE" "versionName")
            - $script:RES_REPO_COMMIT = $(shipctl get_resource_version_key "$env:RES_REPO" "shaData.commitSha")
            - $script:IMG_NAME=$(shipctl get_resource_version_key "$env:IMG_OUT" "sourceName")
            - $script:DH_USR_NAME=$(shipctl get_integration_resource_field "$env:IMG_OUT" "userName")
            - $script:DH_PASS=$(shipctl get_integration_resource_field "$env:IMG_OUT" "password")
            - pushd $(shipctl get_resource_state "$env:RES_REPO")
            - docker build -t="${IMG_NAME}:${REL_VER}" --pull .
            - docker login -u "$DH_USR_NAME" -p "$DH_PASS"
            - docker push "${IMG_NAME}:${REL_VER}"
      - OUT: w2k16dotnetcore_dd_img
    on_success:
      script:
        - shipctl put_resource_state_multi "$env:JOB_NAME" "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT"
        - shipctl put_resource_state_multi "$env:IMG_OUT" "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT" "BUILD_NUMBER=${env:BUILD_NUMBER}"

  - name: w2k16aspnetcore_x8664_build
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    runtime:
      nodePool: x86_w16_cus_01
      container: false
    steps:
      - IN: w2k16aspnetcore_dd_repo
      - IN: w2k16_dd_img
      - TASK:
          name: w2k16aspnetcore_build
          runtime:
            options:
              env:
                - IMG_BASE: "w2k16_dd_img"
                - IMG_OUT: "w2k16aspnetcore_dd_img"
                - RES_REPO: "w2k16aspnetcore_dd_repo"
          script:
            - $script:REL_VER=$(shipctl get_resource_version_key "$env:IMG_BASE" "versionName")
            - $script:RES_REPO_COMMIT = $(shipctl get_resource_version_key "$env:RES_REPO" "shaData.commitSha")
            - $script:IMG_NAME=$(shipctl get_resource_version_key "$env:IMG_OUT" "sourceName")
            - $script:DH_USR_NAME=$(shipctl get_integration_resource_field "$env:IMG_OUT" "userName")
            - $script:DH_PASS=$(shipctl get_integration_resource_field "$env:IMG_OUT" "password")
            - pushd $(shipctl get_resource_state "$env:RES_REPO")
            - docker build -t="${IMG_NAME}:${REL_VER}" --pull .
            - docker login -u "$DH_USR_NAME" -p "$DH_PASS"
            - docker push "${IMG_NAME}:${REL_VER}"
      - OUT: w2k16aspnetcore_dd_img
    on_success:
      script:
        - shipctl put_resource_state_multi "$env:JOB_NAME" "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT"
        - shipctl put_resource_state_multi "$env:IMG_OUT" "versionName=$REL_VER" "IMG_REPO_COMMIT_SHA=$REPO_COMMIT" "BUILD_NUMBER=${env:BUILD_NUMBER}"