resources:
  - name: prepami_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: shippable/buildami
      branch: master

  - name: ami_reqKick_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: shippable/reqKick
      branch: master

  - name: ami_bits_access_cli
    type: cliConfig
    integration: aws_bits_access
    pointer:
      region: us-east-1

  - name: ami_bits_access
    type: integration
    integration: aws_bits_access

  - name: ami_prod_access
    type: integration
    integration: aws_prod_access

  - name: ship_bits_gcp
    type: cliConfig
    integration: ship_bits_gcp_svc
    versionTemplate:
      region: "us-west1-a"

  - name: baseami_params
    type: params
    version:
      params:
        SOURCE_AMI: "ami-772aa961"
        VPC_ID: "vpc-266f3241"
        SUBNET_ID: "subnet-6df12f24"
        SECURITY_GROUP_ID: "sg-f634518c"
        REGION: "us-east-1"

  - name: u16baseami_params
    type: params
    version:
      params:
        SOURCE_AMI: "ami-66506c1c"
        VPC_ID: "vpc-266f3241"
        SUBNET_ID: "subnet-6df12f24"
        SECURITY_GROUP_ID: "sg-f634518c"
        REGION: "us-east-1"

  - name: admiralami_params
    type: params
    version:
      params:
        SOURCE_AMI: "ami-772aa961"
        VPC_ID: "vpc-2d9a894f"
        SUBNET_ID: "subnet-42bfef04"
        SECURITY_GROUP_ID: "sg-9df159f8"
        REGION: "us-east-1"

  - name: c7baseami_params
    type: params
    version:
      params:
        SOURCE_AMI: "ami-ae7bfdb8"
        VPC_ID: "vpc-266f3241"
        SUBNET_ID: "subnet-6df12f24"
        SECURITY_GROUP_ID: "sg-f634518c"
        REGION: "us-east-1"

  - name: windowsbaseami_params
    type: params
    version:
      params:
        SOURCE_AMI: "ami-603b1c1a"
        REGION: "us-east-1"

  - name: windowsbaseami_winrm_keys
    type: integration
    integration: winrm_creds

  - name: cexec_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: shippable/cexec
      branch: master

  - name: node_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: shippable/node
      branch: master

jobs:
  - name: trig_gcp_img_prep
    type: runSh
    steps:
      - IN: u16cppall_img
        switch: off
      - IN: u16phpall_img
        switch: off
      - IN: u16ruball_img
        switch: off
      - IN: u16scaall_img
        switch: off
      - IN: u16javall_img
        switch: off
      - IN: u16golall_img
        switch: off
      - IN: u16cloall_img
        switch: off
      - IN: u16pytall_img
        switch: off
      - IN: u16nodall_img
        switch: off
      - TASK:
          script:
            - ls -al

######################### GCP U14 Image ##################################
  - name: u14_x86_64_gcp_img_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: trig_gcp_img_prep
      - IN: prepami_repo
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: prep_u14_gce_image
          runtime:
            options:
              env:
                - SOURCE_IMAGE_FAMILY: "ubuntu-1404-lts"
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - REL_VER: "master"
                - SSH_USER: "root"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/prep
            - cp -R ../../../templates/prep/* .
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-prep-u14-x86-64"
            - packer validate -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/prep
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/prep
        - cat output.txt
        - popd

  - name: u14_x86_64_gcp_img_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: u14_x86_64_gcp_img_prep
      - IN: node_repo
      - IN: cexec_repo
      - IN: reqProc_x86_64_Ubuntu_14_04_prep
      - IN: prepami_repo
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: patch_u14_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "root"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/patch
            - cp -R ../../../templates/patch/* .
            - shipctl copy_file_from_resource_state "u14_x86_64_gcp_img_prep" "images.txt" .
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u14_x86_64_gcp_img_prep IMAGE_FAM_NAME)
            - export REL_VER=$(shipctl get_resource_version_key u14_x86_64_gcp_img_prep REL_VER)
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-patch-u14-x86-64"
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer validate -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID  -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/patch
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/patch
        - cat output.txt
        - popd

  - name: u14_x86_64_gcp_img_final
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: dry_dh_x86_64_Ubuntu_tag_push
      - IN: dry_dh_x86_64_u16_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - IN: prepami_repo
        switch: off
      - IN: u14_x86_64_gcp_img_patch
        switch: off
      - IN: prod_release
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: final_u14_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "root"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
            - cp -R ../../../templates/final/* .
            - shipctl copy_file_from_resource_state "u14_x86_64_gcp_img_patch" "images.txt" .
            - export REL_VER=$(shipctl get_resource_version_name "prod_release")
            - export REL_VER_DASH=${REL_VER//./-}
            - export IMG_VER=$REL_VER
            - export FAM_NAME=$REL_VER_DASH"-final-u14-x86-64"
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u14_x86_64_gcp_img_patch IMAGE_FAM_NAME)
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var IMG_VER=$IMG_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER" "IMG_VER=$IMG_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - cat output.txt
        - popd

  - name: u14_x86_64_gcp_img_v532
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - IN: u14_x86_64_gcp_img_final
        switch: off
      - TASK:
          name: v532_u14_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "root"
                - IMG_VER: "v5.3.2"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
            - cp -R ../../../templates/final/* .
            - shipctl copy_file_from_resource_state "u14_x86_64_gcp_img_final" "images.txt" .
            - export REL_VER=$(shipctl get_resource_version_name "prod_release")
            - export IMG_VER_DASH=${IMG_VER//./-}
            - export FAM_NAME=$IMG_VER_DASH"-final-u14-x86-64"
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u14_x86_64_gcp_img_final IMAGE_FAM_NAME)
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var IMG_VER=$IMG_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER" "IMG_VER=$IMG_VER"
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - cat output.txt
        - popd

  - name: u14_x86_64_gcp_img_v541
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - IN: u14_x86_64_gcp_img_final
        switch: off
      - TASK:
          name: v541_u14_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "root"
                - IMG_VER: "v5.4.1"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
            - cp -R ../../../templates/final/* .
            - shipctl copy_file_from_resource_state "u14_x86_64_gcp_img_final" "images.txt" .
            - export REL_VER=$(shipctl get_resource_version_name "prod_release")
            - export IMG_VER_DASH=${IMG_VER//./-}
            - export FAM_NAME=$IMG_VER_DASH"-final-u14-x86-64"
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u14_x86_64_gcp_img_final IMAGE_FAM_NAME)
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var IMG_VER=$IMG_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER" "IMG_VER=$IMG_VER"
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - cat output.txt
        - popd

  - name: u14_x86_64_gcp_img_v551
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - IN: u14_x86_64_gcp_img_final
        switch: off
      - TASK:
          name: v551_u14_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "root"
                - IMG_VER: "v5.5.1"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
            - cp -R ../../../templates/final/* .
            - shipctl copy_file_from_resource_state "u14_x86_64_gcp_img_final" "images.txt" .
            - export REL_VER=$(shipctl get_resource_version_name "prod_release")
            - export IMG_VER_DASH=${IMG_VER//./-}
            - export FAM_NAME=$IMG_VER_DASH"-final-u14-x86-64"
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u14_x86_64_gcp_img_final IMAGE_FAM_NAME)
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var IMG_VER=$IMG_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER" "IMG_VER=$IMG_VER"
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_14.04/final
        - cat output.txt
        - popd

######################### GCP U16 Image ##################################
  - name: u16_x86_64_gcp_img_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: trig_gcp_img_prep
      - IN: prepami_repo
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: prep_u16_gce_image
          runtime:
            options:
              env:
                - SOURCE_IMAGE_FAMILY: "ubuntu-1604-lts"
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - REL_VER: "master"
                - SSH_USER: "root"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/prep
            - cp -R ../../../templates/prep/* .
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-prep-u16-x86-64"
            - packer validate -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/prep
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/prep
        - cat output.txt
        - popd

  - name: u16_x86_64_gcp_img_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: u16_x86_64_gcp_img_prep
      - IN: node_repo
      - IN: cexec_repo
      - IN: reqProc_x86_64_Ubuntu_16_04_prep
      - IN: prepami_repo
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: patch_u16_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "root"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/patch
            - cp -R ../../../templates/patch/* .
            - shipctl copy_file_from_resource_state "u16_x86_64_gcp_img_prep" "images.txt" .
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u16_x86_64_gcp_img_prep IMAGE_FAM_NAME)
            - export REL_VER=$(shipctl get_resource_version_key u16_x86_64_gcp_img_prep REL_VER)
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-patch-u16-x86-64"
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer validate -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID  -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/patch
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/patch
        - cat output.txt
        - popd

  - name: u16_x86_64_gcp_img_final
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: dry_dh_x86_64_Ubuntu_tag_push
      - IN: dry_dh_x86_64_u16_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - IN: prepami_repo
        switch: off
      - IN: u16_x86_64_gcp_img_patch
        switch: off
      - IN: prod_release
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: final_u16_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "root"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/final
            - cp -R ../../../templates/final/* .
            - shipctl copy_file_from_resource_state "u16_x86_64_gcp_img_patch" "images.txt" .
            - export REL_VER=$(shipctl get_resource_version_name "prod_release")
            - export IMG_VER=$REL_VER
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-final-u16-x86-64"
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u16_x86_64_gcp_img_patch IMAGE_FAM_NAME)
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var IMG_VER=$IMG_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/final
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER" "IMG_VER=$IMG_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/final
        - cat output.txt
        - popd

#  - name: u16_x86_64_gcp_img_v634
#    type: runSh
#    dependencyMode: strict
#    triggerMode: parallel
#    steps:
#      - IN: gh_ship_repos_tag_push
#      - IN: reports_tag_push
#      - IN: prepami_repo
#        switch: off
#      - IN: prod_release
#        switch: off
#      - IN: ship_bits_gcp
#        switch: off
#      - IN: u16_x86_64_gcp_img_final
#        switch: off
#      - TASK:
#          name: v532_u14_gce_image
#          runtime:
#            options:
#              env:
#                - MACHINE_TYPE: "n1-standard-8"
#                - REGION: "us-east1"
#                - ZONE: "us-east1-b"
#                - PROJECT_ID: "ship-bits"
#                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
#                - SSH_USER: "root"
#                - IMG_VER: "v6.3.4"
#          script:
#            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/final
#            - cp -R ../../../templates/final/* .
#            - shipctl copy_file_from_resource_state "u16_x86_64_gcp_img_final" "images.txt" .
#            - export REL_VER=$(shipctl get_resource_version_name "prod_release")
#            - export IMG_VER_DASH=${IMG_VER//./-}
#            - export FAM_NAME=$IMG_VER_DASH"-final-u16-x86-64"
#            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key u16_x86_64_gcp_img_final IMAGE_FAM_NAME)
#            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
#            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var IMG_VER=$IMG_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
#            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
#            - popd
#    on_success:
#      script:
#        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER" "IMG_VER=$IMG_VER"
#    on_failure:
#      script:
#        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/Ubuntu_16.04/final
#        - cat output.txt
#        - popd

######################### GCP CentOS 7 Image ##################################
  - name: c7_x86_64_gcp_img_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: trig_gcp_img_prep
      - IN: prepami_repo
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: prep_c7_gce_image
          runtime:
            options:
              env:
                - SOURCE_IMAGE_FAMILY: "centos-7"
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - REL_VER: "master"
                - SSH_USER: "centos"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/prep
            - cp -R ../../../templates/prep/* .
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-prep-c7-x86-64"
            - packer validate -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/prep
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/prep
        - cat output.txt
        - popd

  - name: c7_x86_64_gcp_img_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: c7_x86_64_gcp_img_prep
      - IN: node_repo
      - IN: cexec_repo
      - IN: reqProc_x86_64_Ubuntu_16_04_prep
      - IN: prepami_repo
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: patch_c7_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "centos"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/patch
            - cp -R ../../../templates/patch/* .
            - shipctl copy_file_from_resource_state "c7_x86_64_gcp_img_prep" "images.txt" .
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key c7_x86_64_gcp_img_prep IMAGE_FAM_NAME)
            - export REL_VER=$(shipctl get_resource_version_key c7_x86_64_gcp_img_prep REL_VER)
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-patch-c7-x86-64"
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer validate -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID  -var REL_VER=$REL_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/patch
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/patch
        - cat output.txt
        - popd

  - name: c7_x86_64_gcp_img_final
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: dry_dh_x86_64_c7_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - IN: prepami_repo
        switch: off
      - IN: c7_x86_64_gcp_img_patch
        switch: off
      - IN: prod_release
        switch: off
      - IN: ship_bits_gcp
        switch: off
      - TASK:
          name: final_c7_gce_image
          runtime:
            options:
              env:
                - MACHINE_TYPE: "n1-standard-8"
                - REGION: "us-east1"
                - ZONE: "us-east1-b"
                - PROJECT_ID: "ship-bits"
                - SERVICE_ACCOUNT_JSON: "gcp_key.json"
                - SSH_USER: "centos"
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/final
            - cp -R ../../../templates/final/* .
            - shipctl copy_file_from_resource_state "c7_x86_64_gcp_img_patch" "images.txt" .
            - export REL_VER=$(shipctl get_resource_version_name "prod_release")
            - export IMG_VER=$REL_VER
            - export REL_VER_DASH=${REL_VER//./-}
            - export FAM_NAME=$REL_VER_DASH"-final-c7-x86-64"
            - export SOURCE_IMAGE_FAMILY=$(shipctl get_resource_version_key c7_x86_64_gcp_img_patch IMAGE_FAM_NAME)
            - echo $(shipctl get_integration_resource_field ship_bits_gcp JSON_key) > $SERVICE_ACCOUNT_JSON
            - packer build -machine-readable -var service_account_json=$SERVICE_ACCOUNT_JSON -var region=$REGION -var ssh_username=$SSH_USER -var machine_type=$MACHINE_TYPE -var zone=$ZONE -var project_id=$PROJECT_ID -var REL_VER=$REL_VER -var IMG_VER=$IMG_VER -var FAM_NAME=$FAM_NAME -var SOURCE_IMAGE_FAMILY=$SOURCE_IMAGE_FAMILY packer.json 2>&1 | tee output.txt
            - export IMAGE_NAME=$(cat output.txt | awk -F, '$0 ~/artifact,0,id/ {print $6}' | cut -d':' -f 2)
            - popd
    on_success:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/final
        - shipctl put_resource_state_multi $JOB_NAME "versionName=$IMAGE_NAME" "IMAGE_NAME=$IMAGE_NAME" "IMAGE_FAM_NAME=$FAM_NAME" "REL_VER=$REL_VER" "IMG_VER=$IMG_VER"
        - shipctl copy_file_to_state images.txt
        - popd
    on_failure:
      script:
        - pushd $(shipctl get_resource_state "prepami_repo")/gcp/x86_64/CentOS_7/final
        - cat output.txt
        - popd

######################### Admiral Image ##################################
  - name: baseadmiralami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: ami_prod_access
        switch: off
      - IN: admiralami_params
        switch: off
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd admiral
            - ./admiralPack.sh baseadmiralami_prep ami_bits_access ami_prod_access
            - popd
    on_failure:
      - script: echo 'failed'
      - NOTIFY: rc_slack

  - name: finaladmiralami_prep
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: baseadmiralami_prep
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: ami_prod_access
        switch: off
      - IN: prod_release
        switch: off
      - IN: admiralami_params
        switch: off
      - IN: genexec_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: ship_ecr_x86_64_Ubuntu_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd admiralPatch
            - ./admiralPatchPack.sh finaladmiralami_prep baseadmiralami_prep prod_release ami_bits_access ami_prod_access
            - popd
    on_success:
      - script: echo 'SUCCESS'
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/admiralPatch/output.txt


  ###################
  # u14 AMI jobs
  ###################
  - name: baseami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: baseami_params
        switch: off
      - IN: u16cppall_img
      - IN: u16phpall_img
      - IN: u16ruball_img
      - IN: u16scaall_img
      - IN: u16javall_img
      - IN: u16golall_img
      - IN: u16cloall_img
      - IN: u16pytall_img
      - IN: u16nodall_img
      - IN: u14nodall_img
      - IN: u14pytall_img
      - IN: u14cloall_img
      - IN: u14golall_img
      - IN: u14javall_img
      - IN: u14scaall_img
      - IN: u14ruball_img
      - IN: u14phpall_img
      - IN: u14cppall_img
      - IN: node_repo
      - IN: cexec_repo
      - IN: reqProc_x86_64_Ubuntu_14_04_prep
      - IN: ami_reqKick_repo
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd base
            - ./basePack.sh baseami_prep ami_bits_access_cli
            - popd
    on_failure:
      - script: cat IN/prepami_repo/gitRepo/base/output.txt #TODO change to standard syntax

  - name: baseami_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: baseami_params
        switch: off
      - IN: cexec_repo
      - IN: node_repo
      - IN: reqProc_x86_64_Ubuntu_14_04_prep
      - IN: ami_reqKick_repo
      - IN: baseami_prep
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd basePatch
            - ./basePatchPack.sh baseami_patch ami_bits_access_cli baseami_prep
            - popd
    on_failure:
      - script: cat IN/prepami_repo/gitRepo/basePatch/output.txt #TODO change to standard syntax

  - name: finalami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: baseami_patch
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: dry_dh_x86_64_Ubuntu_tag_push
      - IN: dry_dh_x86_64_u16_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPack.sh finalami_prep prod_release baseami_patch ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: stable_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh stable_update prod_release ami-4ae41a5c stable ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: unstable_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh unstable_update prod_release ami-90fd0286 unstable ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v532_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v532_update prod_release ami-3b972d2d v532 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v541_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v541_update prod_release ami-90813b86 v541 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v551_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v551_update prod_release ami-4b36535d v551 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v561_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v561_update prod_release ami-c0a5f5d6 v561 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v573_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v573_update prod_release ami-b9cfdeaf v573 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v582_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v582_update prod_release ami-f9d6e782 v582 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v5104_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v5104_update prod_release ami-312b8d4b v5104 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v614_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v614_update prod_release ami-874d4bfd v614 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v624_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v624_update prod_release ami-32d5274f v624 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  - name: v634_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd exec
            - ./execPackUpdate.sh v634_update prod_release ami-f156f78c v634 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/exec/output.txt

  ###################
  # u16 AMI jobs
  ###################
  - name: u16baseami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: u16baseami_params
        switch: off
      - IN: u16cppall_img
      - IN: u16phpall_img
      - IN: u16ruball_img
      - IN: u16scaall_img
      - IN: u16javall_img
      - IN: u16golall_img
      - IN: u16cloall_img
      - IN: u16pytall_img
      - IN: u16nodall_img
      - IN: node_repo
      - IN: cexec_repo
      - IN: reqProc_x86_64_Ubuntu_16_04_prep
      - IN: ami_reqKick_repo
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd u16Base
            - ./basePack.sh u16baseami_prep ami_bits_access_cli
            - popd
    on_failure:
      - script: cat $(shipctl get_resource_state prepami_repo)/u16Base/output.txt

  - name: u16baseami_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: u16baseami_params
        switch: off
      - IN: cexec_repo
      - IN: node_repo
      - IN: reqProc_x86_64_Ubuntu_16_04_prep
      - IN: ami_reqKick_repo
      - IN: u16baseami_prep
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd u16BasePatch
            - ./basePatchPack.sh u16baseami_patch ami_bits_access_cli u16baseami_prep
            - popd
    on_failure:
      - script: cat $(shipctl get_resource_state prepami_repo)/u16BasePatch/output.txt #TODO change to standard syntax

  - name: u16finalami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: u16baseami_patch
        switch: off
      - IN: prod_release
        switch: off
      - IN: u16baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: dry_dh_x86_64_u16_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd u16Exec
            - ./execPack.sh u16finalami_prep prod_release u16baseami_patch ami_bits_access
            - popd
    on_failure:
      - script: cat $(shipctl get_resource_state prepami_repo)/u16Exec/output.txt

  - name: u16_v634_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd u16Exec
            - ./execPackUpdate.sh u16_v634_update prod_release ami-6158f91c v634 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/u16Exec/output.txt

  ###################
  # w16 AMI jobs
  ###################
  - name: windowsbaseami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: windowsbaseami_params
        switch: off
      - IN: windowsbaseami_winrm_keys
        switch: off
      - IN: reqProc_x86_64_WindowsServer_2016_prep
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd windowsBase
            - sed -i "s/{{%WINRM_USERNAME%}}/$WINRM_USERNAME/g" ./bootstrap_win.txt
            - sed -i "s/{{%WINRM_PASSWORD%}}/$WINRM_PASSWORD/g" ./bootstrap_win.txt
            - ./basePack.sh windowsbaseami_prep ami_bits_access_cli
            - popd
    on_failure:
      - script: pushd $(shipctl get_resource_state "prepami_repo")
      - script: cd windowsBase
      - script: cat output.txt
      - script: popd

  - name: windowsbaseami_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: windowsbaseami_params
        switch: off
      - IN: windowsbaseami_winrm_keys
        switch: off
      - IN: cexec_repo
      - IN: node_repo
      - IN: reqProc_x86_64_WindowsServer_2016_prep
      - IN: ami_reqKick_repo
      - IN: windowsbaseami_prep
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd windowsBasePatch
            - sed -i "s/{{%WINRM_USERNAME%}}/$WINRM_USERNAME/g" ./bootstrap_win.txt
            - sed -i "s/{{%WINRM_PASSWORD%}}/$WINRM_PASSWORD/g" ./bootstrap_win.txt
            - ./basePatchPack.sh windowsbaseami_patch ami_bits_access_cli windowsbaseami_prep
            - popd
    on_failure:
      - script: pushd $(shipctl get_resource_state "prepami_repo")
      - script: cd windowsBasePatch
      - script: cat output.txt
      - script: popd

  - name: windowsfinalami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: windowsbaseami_params
        switch: off
      - IN: windowsbaseami_winrm_keys
        switch: off
      - IN: windowsbaseami_patch
        switch: off
      - IN: prod_release
        switch: off
      - IN: dry_dh_x86_64_Windows_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd windowsExec
            - sed -i "s/{{%WINRM_USERNAME%}}/$WINRM_USERNAME/g" ./bootstrap_win.txt
            - sed -i "s/{{%WINRM_PASSWORD%}}/$WINRM_PASSWORD/g" ./bootstrap_win.txt
            - ./execPack.sh windowsfinalami_prep prod_release windowsbaseami_patch ami_bits_access
            - popd
    on_failure:
      - script: pushd $(shipctl get_resource_state "prepami_repo")
      - script: cd windowsExec
      - script: cat output.txt
      - script: popd

  ###################
  # c7 AMI jobs
  ###################
  - name: c7baseami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: c7baseami_params
        switch: off
      - IN: c7nodall_img
      - IN: c7cppall_img
      - IN: c7pytall_img
      - IN: c7javall_img
      - IN: node_repo
      - IN: cexec_repo
      - IN: reqProc_x86_64_Ubuntu_16_04_prep
      - IN: ami_reqKick_repo
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd c7Base
            - ./basePack.sh c7baseami_prep ami_bits_access_cli
            - popd
    on_failure:
      - script: pushd $(shipctl get_resource_state "prepami_repo")
      - script: cd c7Base
      - script: cat output.txt
      - script: popd

  - name: c7baseami_patch
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: ami_bits_access_cli
        switch: off
      - IN: c7baseami_params
        switch: off
      - IN: cexec_repo
      - IN: node_repo
      - IN: reqProc_x86_64_Ubuntu_16_04_prep
      - IN: ami_reqKick_repo
      - IN: c7baseami_prep
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd c7BasePatch
            - ./basePatchPack.sh c7baseami_patch ami_bits_access_cli c7baseami_prep
            - popd
    on_failure:
      - script: cat $(shipctl get_resource_state prepami_repo)/c7BasePatch/output.txt

  - name: c7finalami_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: prepami_repo
        switch: off
      - IN: c7baseami_patch
        switch: off
      - IN: prod_release
        switch: off
      - IN: c7baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: dry_dh_x86_64_c7_tag_push
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd c7Exec
            - ./execPack.sh c7finalami_prep prod_release c7baseami_patch ami_bits_access
            - popd
    on_failure:
      - script: cat $(shipctl get_resource_state prepami_repo)/c7Exec/output.txt

  - name: c7_v634_update
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: prepami_repo
        switch: off
      - IN: prod_release
        switch: off
      - IN: baseami_params
        switch: off
      - IN: ami_bits_access
        switch: off
      - IN: gh_ship_repos_tag_push
      - IN: reports_tag_push
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "prepami_repo")
            - cd c7Exec
            - ./execPackUpdate.sh c7_v634_update prod_release ami-a86dc9d5 v634 ami_bits_access
            - popd
    on_failure:
      - script: cat /build/IN/prepami_repo/gitRepo/c7Exec/output.txt
